## Functional Component
```js
import React, { useMemo } from 'react';
import Select from '@splunk/react-ui/Select';
import PropTypes from 'prop-types';
import useWhyDidYouUpdate from './useWhyDidYouUpdate';

export const generateOptions = options => {
  return options.map(option => {
    return <Select.Option label={option.label} value={option.id} key={option.id} />;
  });
};

const SavedViews = React.memo(props => {
  // useWhyDidYouUpdate('Counter', props);
  // console.log(props);
  const { selectedFilterId, filters } = props;

  const selectOptions = useMemo(() => generateOptions(filters), [filters]);

  const handleDropdownChange = (e, data) => {
    const { value } = data;
    props.onChange(value);
  };

  return (
    <>
      <span style={{ marginRight: '10px' }}>Showing:</span>
      <Select value={selectedFilterId} onChange={handleDropdownChange}>
        {selectOptions}
      </Select>
    </>
  );
});

SavedViews.propTypes = {
  filters: PropTypes.array,
  onChange: PropTypes.func.isRequired,
  selectedFilterId: PropTypes.string,
};

SavedViews.defaultProps = {
  filters: [],
  selectedFilterId: null,
};

export default SavedViews;
```
